require "spec_helper"
require "rails_helper"

RSpec.describe UtilsManager::FormattersManager::IdFormatter do
  describe "execute" do
    context "when an array of objects is passsed" do
      it "returns the ids of those objects" do
        id_formatter = UtilsManager::FormattersManager::IdFormatter
        objects = [{ "created_at" => "2019-09-05T13:38:12.000Z", "title" => "Google Wants to Help Tech Companies Know Less About You", "url" => "https://www.wired.com/story/google-differential-privacy-open-source/", "author" => "dsr12", "points" => 1, "story_text" => nil, "comment_text" => nil, "num_comments" => 0, "story_id" => nil, "story_title" => nil, "story_url" => nil, "parent_id" => nil, "created_at_i" => 1567690692, "relevancy_score" => 9043, "_tags" => ["story", "author_dsr12", "story_20886524"], "objectID" => "20886524", "_highlightResult" => { "title" => { "value" => "<em>Google</em> Wants to Help Tech Companies Know Less About You", "matchLevel" => "full", "fullyHighlighted" => false, "matchedWords" => ["google"] }, "url" => { "value" => "https://www.wired.com/story/<em>google</em>-differential-privacy-open-source/", "matchLevel" => "full", "fullyHighlighted" => false, "matchedWords" => ["google"] }, "author" => { "value" => "dsr12", "matchLevel" => "none", "matchedWords" => [] } } }, { "created_at" => "2019-09-05T12:41:25.000Z", "title" => "Ask HN: How to build web apps that deploy user environments?", "url" => nil, "author" => "dizzydiz", "points" => 2, "story_text" => "Think apps along the lines of web flow, squarespace etc. Whereby when a new user joins they have an environment to develop in and direct a custom URL to if needed.<p>I&#x27;m agnostic about whether they&#x27;ll be on shared resources or single servers, but was wondering if there&#x27;s any frameworks&#x2F;systems that will help with this type of architecture? Even reading materials on how to get started? I confess I&#x27;m not even sure which terms to Google...<p>I&#x27;m willing to swallow cost if there&#x27;s a SaaS that makes it easy, for example.", "comment_text" => nil, "num_comments" => 1, "story_id" => nil, "story_title" => nil, "story_url" => nil, "parent_id" => nil, "created_at_i" => 1567687285, "relevancy_score" => 9043, "_tags" => ["story", "author_dizzydiz", "story_20886036", "ask_hn"], "objectID" => "20886036", "_highlightResult" => { "title" => { "value" => "Ask HN: How to build web apps that deploy user environments?", "matchLevel" => "none", "matchedWords" => [] }, "author" => { "value" => "dizzydiz", "matchLevel" => "none", "matchedWords" => [] }, "story_text" => { "value" => "Think apps along the lines of web flow, squarespace etc. Whereby when a new user joins they have an environment to develop in and direct a custom URL to if needed.<p>I'm agnostic about whether they'll be on shared resources or single servers, but was wondering if there's any frameworks/systems that will help with this type of architecture? Even reading materials on how to get started? I confess I'm not even sure which terms to <em>Google</em>...<p>I'm willing to swallow cost if there's a SaaS that makes it easy, for example.", "matchLevel" => "full", "fullyHighlighted" => false, "matchedWords" => ["google"] } } }, { "created_at" => "2019-09-05T11:33:12.000Z", "title" => "Google search results in Google Sheets or Excel", "url" => "https://www.aozata.com/how-to-get-google-search-results-in-google-sheets-excel/", "author" => "muthali", "points" => 1, "story_text" => nil, "comment_text" => nil, "num_comments" => 1, "story_id" => nil, "story_title" => nil, "story_url" => nil, "parent_id" => nil, "created_at_i" => 1567683192, "relevancy_score" => 9043, "_tags" => ["story", "author_muthali", "story_20885647"], "objectID" => "20885647", "_highlightResult" => { "title" => { "value" => "<em>Google</em> search results in <em>Google</em> Sheets or Excel", "matchLevel" => "full", "fullyHighlighted" => false, "matchedWords" => ["google"] }, "url" => { "value" => "https://www.aozata.com/how-to-get-<em>google</em>-search-results-in-<em>google</em>-sheets-excel/", "matchLevel" => "full", "fullyHighlighted" => false, "matchedWords" => ["google"] }, "author" => { "value" => "muthali", "matchLevel" => "none", "matchedWords" => [] } } }]

        ids = ["20886524", "20886036", "20885647"]
        result = id_formatter.execute(objects)
        expect(result).to be_a(Array)
        expect(result).to eql(ids)
      end
    end
  end
end
